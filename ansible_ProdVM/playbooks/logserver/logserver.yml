---
# This playbook configures a host to function as logserver

- name: configure host to function as logserver
  hosts: all

  roles:
    - { role: fffm_common, tags: fffm-common }
    - { role: fffm_zsh, tags: fffm-zsh }
    - { role: fffm_elasticsearch, tags: fffm-elasticsearch }
    - { role: nginx, when: "use_nginx", tags: nginx }
    - { role: apache, when: "use_apache", tags: apache }

  vars:
    # Specify which users should get ZSH
    fffm_zsh_users: []
    # Specify which users should get a tmux config
    fffm_tmux_users: ["root", "y1fschul", "zomchr", "a1l_zomchr"]
    # Name of the Logstash configuration template
    fffm_elasticsearch_logstash_conf: "logstash.conf.j2"
    # Name of the Kibana configuration template
    fffm_elasticsearch_kibana_yml: "kibana.yml.j2"
    # Configure proxy to route traffic through corporate
    # deep packet inspection
    proxy_env:
      http_proxy: https://185.46.212.90:9480
      https_proxy: https://185.46.212.90:9480
    # SSL certificate for logstash
    ssl_certificate_path: "/etc/logstash/cznet_keystore.p12"
    ssl_certificate_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          34646132323135346230383038373162623532616664653830323132303261386361636436613732
          6536323834316635356631356335333730363436333963350a336139616434363634336166623030
          63386166653736663934623035316164623536346431633438623761316431633239356632303037
          3339616665346565650a656530623730626132636562396639343939356435303461616634333230
          3737
    # RabbitMQ credentials are stored here in encrypted form.
    rabbitmq_user: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37653138323663353635326563373930343766306333343234396637313137613965363731383661
          6130616239656162666631363531666564383935306437370a303665613637393863363237663236
          34613235343939646132393931633436613063396334656135643631306135323831626538376662
          3564666338316637370a346634363064333638333533366464333963396366353037353361313462
          3230
    rabbitmq_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63616530333137666234306630303934373738643961363239306164336430366666383736393962
          3761643762333361353836636338303131316432303737630a633238333435633636663833353362
          30326635303662383835323365386234366334363661316134336633663135626436616435326161
          3662346532383130350a643932326263383033373334336337353463633064613331383961393734
          38383033343633356334326131313939633365376665666264393337353530656437
    # nginx reverse proxy
    nginx_remove_default_vhost: True
    # enable custom nginx repository
    nginx_yum_repo_enabled: False
    ##########
    # configure vhosts for nginx
    ##########
    nginx_vhosts:
      - listen: "443 ssl http2"
        server_name: "logs-3fm.zeiss.org"
        #root: "/var/www/logs-3fm"
        #index: "index.html"
        state: "present"
        template: "{{ nginx_vhost_template }}"
        filename: "logs-3fm.zeiss.org.ssl.conf"
        extra_parameters: |
          ssl_certificate     /etc/ssl/certs/zdeoko04sappcp.crt;
          ssl_certificate_key /etc/ssl/certs/zdeoko04sappcp.pem;
          ssl_protocols       TLSv1.1 TLSv1.2;
          ssl_ciphers         HIGH:!aNULL:!MD5;
          #Authorize access
          #auth_ldap         "login required";
          #auth_ldap_servers         cznet;
          location /kibana {
              rewrite /kibana$      /   break;
              rewrite /kibana/(.*)$ /$1 break;
              auth_basic           "ElasticSearch";
              auth_basic_user_file /usr/local/etc/elasticsearch/.htpasswd;
              proxy_pass http://127.0.0.1:5601;
              proxy_redirect off;
              proxy_buffering off;
              proxy_http_version 1.1;
              proxy_set_header Connection "Keep-Alive";
              proxy_set_header Proxy-Connection "Keep-Alive";
          }
      - listen: "80"
        server_name: "logs-3fm.zeiss.org"
        return: "301 https://logs-3fm.zeiss.org$request_uri"
        filename: "logs-3fm.zeiss.org.conf"
    ##########
    # Apache
    ##########
    apache_vhosts_filename: reverse_proxy_kibana2.conf
    apache_global_vhost_settings: |
      LDAPVerifyServerCert          off
      LDAPTrustedGlobalCert CA_BASE64 /etc/ssl/certs/activedirectory.pem

    apache_vhosts:
      - servername: logs.3fm
        extra_parameters: |
          RewriteEngine              On
          RewriteRule     ^/$    https://%{HTTP_HOST}/ [R,L]
          RewriteRule     ^(.*)$     https://%{HTTP_HOST}$1 [R,L]

    apache_vhosts_ssl:
      - servername: "logs-3fm.zeiss.org"
        certificate_file: "/etc/ssl/certs/zdeoko04sappcp.crt"
        certificate_key_file: "/etc/ssl/certs/zdeoko04sappcp.pem"
        apache_ssl_protocol: "All -SSLv2"
        apache_ssl_cipher_suite: "ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW"
        extra_parameters: |
          ErrorLog logs/ssl_error_log
          TransferLog logs/ssl_access_log
          LogLevel warn
          SSLEngine on
          <Location "/kibana">
          ExpiresActive Off
          AuthType Basic
          AuthName "LDAP Authentication Required"
          AuthBasicProvider ldap
          AuthLDAPURL "ldaps://deokosdc023.cznet.zeiss.org:636/DC=cznet,DC=zeiss,DC=org?sAMAccountName?sub?(objectClass=*)"
          Require ldap-group CN=APPODEOKOY1_Logs3fmAdmins,OU=Groups,OU=01DEOKO,OU=01DE,OU=01,OU=AGC,DC=cznet,DC=zeiss,DC=org
          Require ldap-group CN=APPODEOKOY1_Logs3fmContributors,OU=Groups,OU=01DEOKO,OU=01DE,OU=01,OU=AGC,DC=cznet,DC=zeiss,DC=org
          Require ldap-group CN=APPODEOKOY1_Logs3fmUsers,OU=Groups,OU=01DEOKO,OU=01DE,OU=01,OU=AGC,DC=cznet,DC=zeiss,DC=org
          AuthLDAPBindDN  "y1imba@cznet.zeiss.org"
          AuthLDAPBindPassword Y1backup15APR
          ProxyPass http://localhost:5601 retry=0
          ProxyPassReverse http://localhost:5601
          </Location>

  tasks:

    - block:

      - debug:
          msg: >
            enable_logstash_input_tcp: {{ enable_logstash_input_tcp }},
            enable_logstash_input_amqp_testing: {{ enable_logstash_input_amqp_testing }},
            enable_logstash_input_amqp_productive: {{ enable_logstash_input_amqp_productive }},
            enable_logstash_filters: {{ enable_logstash_filters }},
            enable_logstash_output_elasticsearch: {{ enable_logstash_output_elasticsearch }},
            enable_logstash_output_stdout: {{ enable_logstash_output_stdout }}

      tags:
        - print-vars

    - block:

      - debug:
          msg: "Huhu"

      tags:
        - configure-basics

    - block:

      - name: Copy CZNET PEM certificate to remote
        copy:
          src: cznet.pem
          dest: cznet.pem

      - name: Remove old certificate file
        file:
          path: "{{ ssl_certificate_path }}"
          state: absent

      - name: Convert certificate to PKCS12 format
        command: "keytool -importcert -file cznet.pem -trustcacerts -noprompt -keystore {{ ssl_certificate_path }} -storepass {{ ssl_certificate_password }} -storetype PKCS12"

      - name: Remove temporary CZNET PEM certificate from remote
        file:
          path: cznet.pem
          state: absent

      tags:
        - create-cert
